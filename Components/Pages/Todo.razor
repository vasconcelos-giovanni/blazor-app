@page "/todo"
@rendermode InteractiveServer

<PageTitle>Todo List</PageTitle>

<h3>Todo (@todos.Count(todo => !todo.IsDone))</h3>

<ul class="list-group">
    @* <li class="list-group-item">
    <input class="form-check-input me-1" type="checkbox" value="" id="firstCheckbox">
    <label class="form-check-label" for="firstCheckbox">Go to work</label>
    </li>
    <li class="list-group-item">
    <input class="form-check-input me-1" type="checkbox" value="" id="firstCheckbox" checked>
    <label class="form-check-label" for="firstCheckbox">Go study</label>
    </li> *@
    @foreach (var todo in todos)
    {
        <li class="list-group-item">
            <input class="form-check-input me-1" type="checkbox" value="" id="firstCheckbox" @bind="todo.IsDone">
            <label class="form-check-label" for="firstCheckbox">@todo.Title</label>
        </li>
    }
</ul>
<div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="Username" aria-label="Username" aria-describedby="basic-addon1"
        @bind="newTodo" />
    <button class="btn btn-primary" @onclick="AddTodo">Add todo</button>
</div>

@code
{
    private List<TodoItem> todos = new();
    private string newTodo = "";

    protected override void OnInitialized()
    {

        todos.Add(new TodoItem { Title = "Go to work" });
        todos.Add(new TodoItem { Title = "Go study", IsDone = true });
    }

    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo });
            newTodo = string.Empty;
        }
    }
}
